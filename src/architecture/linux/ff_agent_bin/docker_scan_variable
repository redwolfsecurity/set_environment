#!/bin/bash

# This auxiliary script greps given variable name in the given container.
#
# Usage example:
#   scan_variable action_manager LOG_DIR=/var/log
#
# The above example will scan for "LOG_DIR" (ignoring the "=" sign and value, case sensitive)
#

CONTAINER_NAME="${1}"
SCAN_FOR="${2}"

# Extract the variable name
MATCH=$( echo "${SCAN_FOR}" | cut -d= -f1 )

[ ! -z "${CONTAINER_NAME}" ] || { error "Failed to get the container name from the arguments."; exit 1; }
[ ! -z "${MATCH}" ] || { error "Failed to extract match term."; exit 1; }

# Newer call exclude non-ascii files, exclude certain paths, prints filename and line numbers (very fast)
# Note: had to split to 2 calls: find() and collect to array, later iterate and grep, otherwise
#
# Getting several errors:
#  - while calling "file": sudo: unable to execute /usr/bin/file: Argument list too long
#
 # Note: we use "-u 0" to run the command as root, but if we pipe to any
 # other commands they will be run as regular user (might require "sudo").
 time docker exec \
  -u 0 \
  "${CONTAINER_NAME}" \
  find / \
  ! -path '/lib/*'   \
  ! -path '/sys/*'    \
  ! -path '/proc/*'    \
  ! -path '/usr/lib/*'  \
  ! -path '/var/cache/*' \
  ! -path '/usr/share/*'  \
  ! -path '/usr/include/*' \
  ! -path '/var/lib/dpkg/*' \
  ! -path '/usr/local/lib/*' \
  ! -path '/var/lib/systemd/*' \
  ! -path '/usr/local/include/*'\
  -type f \
  -exec grep \
         --binary-files=without-match \
         --with-filename -n "${MATCH}" {} \
  \;
